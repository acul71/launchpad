{
  "ipfs": {
    "1.4": {
      "description": "Be able to explain the basics of data transfer in IPFS",
      "subgoals": [
        {
          "id": "1.41",
          "description": "Learn what is IPFS's message-oriented protocol to exchange data"
        },
        {
          "id": "1.42",
          "description": "Know what are the different message types and their order of operations"
        },
        {
          "id": "1.43",
          "description": "Understand what is _the session_ and _the ledger_ in the context of Bitswap"
        },
        {
          "id": "1.44",
          "description": "Explain the different components of Bitswap at a high level"
        },
        {
          "id": "1.45",
          "description": "Discover what advantages Graphsync has over Bitswap"
        }
      ]
    }
  },
  "libp2p": {
    "1.2": {
      "description": "Understand the main building blocks of libp2p",
      "subgoals": [
        {
          "id": "1.21",
          "description": "Understand that libp2p offers several transport protocols"
        },
        {
          "id": "1.22",
          "description": "Understand that libp2p offers several NAT traversal solutions"
        },
        {
          "id": "1.23",
          "description": "Understand what stream multiplexing is, and what benefits it provides"
        },
        {
          "id": "1.24",
          "description": "Understand why libp2p uses multiaddresses"
        }
      ]
    },
    "1.3": {
      "description": "Understand how libp2p establishes connections",
      "subgoals": [
        {
          "id": "1.31",
          "description": "Understand what is a node/peer"
        },
        {
          "id": "1.32",
          "description": "Understand how peer identity is generated"
        },
        {
          "id": "1.33",
          "description": "Understand the steps involved in opening a connection (handshake, security, multiplexing)"
        },
        {
          "id": "1.34",
          "description": "Understand that multiplexing is useful to use several application protocols over the same connection"
        }
      ]
    }
  }
}
